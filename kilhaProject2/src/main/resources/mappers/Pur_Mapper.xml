<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kilha.www.dao.Pur_DAO">


	<!-- 원재료 목록 뽑기 (팝업창) -->
	<select id="rmList" resultType="RawMaterials"> 
		select 
			rmcode
			, rmname
			, rmstock
		from Pur_rawmaterials
	</select>
	
	<!-- 스태프 정보 뽑기(팝업창) -->
	<select id="StaffList" resultType="Staff"> 
		select * from staff
	</select>
	
	<!-- 거래기록 목록 리스트 -->
	
	<select id="trList" resultType="TradeRecords"> 
		select *
		from Pur_traderecords
		order by dealdate asc
	</select>
	
	
	<!-- 원재료 가격정보 뽑기(차트그릴때) -->
	<select id="rmChart"  parameterType="String" resultType="RM_daily_price"> 
		select to_char(rmdate, 'yyyy-mm-dd') as rmdate, rmopen, rmhigh, rmlow, rmclose, rmvolume
        from Pur_rm_daily_price
		where rmname=#{rmname}
        order by rmdate asc
	</select>
	
	<!-- 팝업창 재료검색데이터 불러오기 -->
	<select id="popupsearch" parameterType="String" resultType="RawMaterials">
		select rmcode, rmname, rmstock
		from Pur_rawmaterials
		where rmname like '%' || #{searchText} || '%'
	</select>

	
	<!-- 거래내역테이블 BUY 입력 -->
	 <insert id="AddTradeRecords" parameterType="TradeRecords">
	INSERT INTO Pur_traderecords 
	(dealdate, RMname, RMcode, dealtype, quantity, price, totalprice, profits, profitrates)
	VALUES
	(#{dealdate}, #{rmname}, #{rmcode}, #{dealtype}, #{quantity}, #{price}, #{totalprice}, 0, 0)
</insert>
	
	<!-- 재료정보하나 이름으로 가지고오기 -->
	<select id="selectRM" parameterType="String" resultType="RawMaterials">
		select *
		from Pur_rawmaterials
		where rmname=#{rmname}
	</select>
	
	<!-- 재료테이블에 가격 및 수량 업데이트 -->
	<update id="AddRawMaterials" parameterType="Map">
	update Pur_rawmaterials set
	rmstock = rmstock+#{NewStock},
	rmavgprice = #{NewAvgPrice}
	where rmcode = #{rmcode}
	</update>
	
	<!-- 팝업창 스태프검색데이터 불러오기 -->
	<select id="staffsearch" parameterType="String" resultType="Staff">
		select *
		from staff
		where staff_name like '%' || #{searchText3} || '%'
	</select>
	
	<!-- 이름으로 스태프 정보 하나 찾기 -->
	<select id="fineonestaff" parameterType="String" resultType="Staff">
		select * from staff
		where staff_name = #{staffname}
	</select>
	
	<!-- 주문기본정보 입력하기 -->
	<insert id="insertorder" parameterType="OrderRecords">
	INSERT INTO Pur_orderrecords 
	(taskcode, requestdate, etc, staff_code)
	VALUES
	(#{taskcode}, #{requestdate}, #{etc}, #{staff_code})
	</insert>
	
	<insert id="insertorderdetail" parameterType="OrderRecords_Detail">
	INSERT INTO Pur_orderrecords_detail
	(taskcode, rmname, quantity, price, total)
	VALUES
	(#{taskcode}, #{rmname}, #{quantity}, #{price},#{total})
	</insert>
	
	
	<!-- 주문완료 목록 개수 반환 -->
	<select id="ordercount" resultType="int"> 
		select count(*) from PUR_ORDERRECORDS
	</select>
	
	<!-- 주문목록 정보 뽑기(게시판) -->
	<select id="orderlist" resultType="OrderRecords"> 
		select * from PUR_ORDERRECORDS
	</select>
	
	<!-- 스태프코드로 스태프 정보 하나 찾기 -->
	<select id="findstaffbynum" parameterType="int" resultType="Staff">
		select * from staff
		where staff_code = #{tempstaff}
	</select>
	
	<!-- 요청코드로 기본정보 뽑기 -->
	<select id="getbasicrecord" parameterType="String" resultType="OrderRecords">
		select * from Pur_orderrecords
		where taskcode = #{taskcode}
	</select>
	
	<!-- 요청코드로 주문디테일 정보 모두 뽑기 -->
	<select id="getdetailrecord" parameterType="String" resultType="OrderRecords_Detail">
		select * from Pur_orderrecords_detail
		where taskcode = #{taskcode}
	</select>
	
</mapper>
