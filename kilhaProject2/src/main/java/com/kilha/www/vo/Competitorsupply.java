package com.kilha.www.vo;
import java.io.Serializable;
import java.util.Date;

/**
 * 경쟁사 납품 정보 테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Competitorsupply implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 상품테이블. */
	private Product product;

	/** 매장테이블. */
	private Shop shop;

	/** 경쟁사 정보 테이블. */
	private Competitor competitor;

	/** 납품일자. */
	private Date competitorsupplyDate;

	/** 납품 수량. */
	private Integer competitorsupplyVolume;

	/** 경쟁사 납품 가격. */
	private Integer competitorsupplySupplyPrice;

	/**
	 * 생성자.
	 */
	public Competitorsupply() {
	}

	/**
	 * 상품테이블을 설정합니다..
	 * 
	 * @param product
	 *            상품테이블
	 */
	public void setProduct(Product product) {
		this.product = product;
	}

	/**
	 * 상품테이블을 가져옵니다..
	 * 
	 * @return 상품테이블
	 */
	public Product getProduct() {
		return this.product;
	}

	/**
	 * 매장테이블을 설정합니다..
	 * 
	 * @param shop
	 *            매장테이블
	 */
	public void setShop(Shop shop) {
		this.shop = shop;
	}

	/**
	 * 매장테이블을 가져옵니다..
	 * 
	 * @return 매장테이블
	 */
	public Shop getShop() {
		return this.shop;
	}

	/**
	 * 경쟁사 정보 테이블을 설정합니다..
	 * 
	 * @param competitor
	 *            경쟁사 정보 테이블
	 */
	public void setCompetitor(Competitor competitor) {
		this.competitor = competitor;
	}

	/**
	 * 경쟁사 정보 테이블을 가져옵니다..
	 * 
	 * @return 경쟁사 정보 테이블
	 */
	public Competitor getCompetitor() {
		return this.competitor;
	}

	/**
	 * 납품일자을 설정합니다..
	 * 
	 * @param competitorsupplyDate
	 *            납품일자
	 */
	public void setCompetitorsupplyDate(Date competitorsupplyDate) {
		this.competitorsupplyDate = competitorsupplyDate;
	}

	/**
	 * 납품일자을 가져옵니다..
	 * 
	 * @return 납품일자
	 */
	public Date getCompetitorsupplyDate() {
		return this.competitorsupplyDate;
	}

	/**
	 * 납품 수량을 설정합니다..
	 * 
	 * @param competitorsupplyVolume
	 *            납품 수량
	 */
	public void setCompetitorsupplyVolume(Integer competitorsupplyVolume) {
		this.competitorsupplyVolume = competitorsupplyVolume;
	}

	/**
	 * 납품 수량을 가져옵니다..
	 * 
	 * @return 납품 수량
	 */
	public Integer getCompetitorsupplyVolume() {
		return this.competitorsupplyVolume;
	}

	/**
	 * 경쟁사 납품 가격을 설정합니다..
	 * 
	 * @param competitorsupplySupplyPrice
	 *            경쟁사 납품 가격
	 */
	public void setCompetitorsupplySupplyPrice(Integer competitorsupplySupplyPrice) {
		this.competitorsupplySupplyPrice = competitorsupplySupplyPrice;
	}

	/**
	 * 경쟁사 납품 가격을 가져옵니다..
	 * 
	 * @return 경쟁사 납품 가격
	 */
	public Integer getCompetitorsupplySupplyPrice() {
		return this.competitorsupplySupplyPrice;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((product == null) ? 0 : product.hashCode());
		result = prime * result + ((shop == null) ? 0 : shop.hashCode());
		result = prime * result + ((competitor == null) ? 0 : competitor.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Competitorsupply other = (Competitorsupply) obj;
		if (product == null) {
			if (other.product != null) {
				return false;
			}
		} else if (!product.equals(other.product)) {
			return false;
		}
		if (shop == null) {
			if (other.shop != null) {
				return false;
			}
		} else if (!shop.equals(other.shop)) {
			return false;
		}
		if (competitor == null) {
			if (other.competitor != null) {
				return false;
			}
		} else if (!competitor.equals(other.competitor)) {
			return false;
		}
		return true;
	}

}
